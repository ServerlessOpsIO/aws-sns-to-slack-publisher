env:
  global:
    - DIST_DIR="${PWD}/dist"
    - PROJECT_NAME=$(basename ${PWD})
    - ARTIFACT_ID="${TRAVIS_BUILD_NUMBER}-${TRAVIS_COMMIT}"
    - ARTIFACT="${ARTIFACT_ID}.zip"
    - SAM_TEMPLATE="sam.yml"
    - SAM_TEMPLATE_PACKAGED="sam-packaged.yml"
    - S3_BUCKET_PREFIX="serverlessops-opensource-deploy"
    - S3_BUCKET_DEV="${S3_BUCKET_PREFIX}-dev"
    - S3_BUCKET_PROD="${S3_BUCKET_PREFIX}-prod"
    - S3_PREFIX=${PROJECT_NAME}/${ARTIFACT_ID}
    - AWS_REGION=us-east-1
    # AWS_ACCESS_KEY_ID_DEV
    # AWS_SECRET_ACCESS_KEY_DEV
    # AWS_ACCESS_KEY_ID_PROD
    # AWS_SECRET_ACCESS_KEY_PROD

stages:
  - build
  # We can take the PR conditional out when we get to a point of deploying
  # to an environment to do integration testing.
  - name: deploy-dev
    if: branch = master AND type != pull_request
  - name: integration-test
    if: branch = master AND type != pull_request
  - name: promote-to-prod
    if: branch = master AND type != pull_request
  - name: deploy-prod
    if: branch = master AND type != pull_request

jobs:
  include:
    - stage: build
      sudo: required
      services:
        - docker
      language: python
      python: '3.6'
      install:
        - pip install awscli
        #- pip install aws-sam-cli
        - aws configure set default.region $AWS_REGION
        - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID_DEV
        - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY_DEV
        - pip install -r requirements.txt
        - pip install -r requirements-dev.txt
      script:
        # Fixes strange failure. ref: https://github.com/travis-ci/travis-ci/issues/7940
        - export BOTO_CONFIG=/dev/null
        - pytest -v tests/unit
        #- sam validate -t $SAM_TEMPLATE
        #- sam package -t $SAM_TEMPLATE --s3-bucket $S3_BUCKET_DEV --s3-prefix ${PROJECT_NAME}/${ARTIFACT_ID}
        - aws cloudformation package --template-file $SAM_TEMPLATE --output-template-file $SAM_TEMPLATE_PACKAGED --s3-bucket ${S3_BUCKET_DEV} --s3-prefix ${S3_PREFIX}
        - aws s3 cp $SAM_TEMPLATE_PACKAGED s3://${S3_BUCKET}/${S3_PREFIX}
      after_script:
        # Ensure our creds are cleaned up.
        - rm -rf ~/.aws
      #deploy:
      #  - provider: script
      #    script: sam package --template-file $SAM_TEMPLATE --s3-bucket $S3_BUCKET_DEV --s3-prefix ${PROJECT_NAME}/${ARTIFACT_ID}

